{"version":3,"file":"objectools.cjs.js","sources":["../src/BinaryCodec.js"],"sourcesContent":["import { Base64 } from 'js-base64'\n\nconst constants = {\n  PREFIX: '_#OT#_',\n  SEPARATOR: ':',\n}\n\n/**\n * From typed array constructor name to fixed length descriptor\n */\nconst TYPE_TO_FLAG = {\n  'Int8Array'     : '___i8',\n  'Uint8Array'    : '__ui8',\n  'Int16Array'    : '__i16',\n  'Uint16Array'   : '_ui16',\n  'Int32Array'    : '__i32',\n  'Uint32Array'   : '_ui32',\n  'BigInt64Array' : '__i64',\n  'BigUint64Array': '_ui64',\n  'Float32Array'  : '__f32',\n  'Float64Array'  : '__f64',\n  'ArrayBuffer'   : '___ab',\n}\n\n// the reverse LUT\nlet FLAG_TO_TYPE = {\n  '___i8': Int8Array,\n  '__ui8': Uint8Array,\n  '__i16': Int16Array,\n  '_ui16': Uint16Array,\n  '__i32': Int32Array,\n  '_ui32': Uint32Array,\n  '__i64': BigInt64Array,\n  '_ui64': BigUint64Array,\n  '__f32': Float32Array,\n  '__f64': Float64Array,\n  '___ab': ArrayBuffer,\n}\n\nconstants.PREFIX_LENGTH = constants.PREFIX.length + constants.SEPARATOR.length + Object.values(TYPE_TO_FLAG)[0].length\n\n\nexport default class BinaryCodec {\n  /**\n   * Encode from a typed array to base64 prepended with a markup\n   * @param {*} data \n   */\n  static encode(data) {\n    if (!(data.constructor.name in TYPE_TO_FLAG)) {\n      return data\n    }\n\n    let byteArray = null\n\n    if (data.constructor.name === ArrayBuffer) {\n      byteArray = new Uint8Array(data)\n    } else {\n      byteArray = new Uint8Array(data.buffer)\n    }\n\n    const b64 = Base64.fromUint8Array(byteArray)\n    const encoded = `${constants.PREFIX}${TYPE_TO_FLAG[data.constructor.name]}${constants.SEPARATOR}${b64}`\n    return encoded\n  }\n\n  static decode(str) {\n    if (!str.startsWith(constants.PREFIX)) {\n      return str\n    }\n\n    const prefix = str.slice(0, constants.PREFIX_LENGTH) \n    const b64 = str.slice(constants.PREFIX_LENGTH)\n    const bytes = Base64.toUint8Array(b64)\n    const binaryConstructor = FLAG_TO_TYPE[prefix.slice(constants.PREFIX.length, prefix.length - 1 )]\n    const data = new binaryConstructor(bytes.buffer)\n    return data\n  }\n}"],"names":["Base64"],"mappings":"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"}